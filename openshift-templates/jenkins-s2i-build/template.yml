---
kind: List
apiVersion: v1
metadata:
  name: jenkins-s2i
  annotations:
    openshift.io/display-name: Jenkins S2I
    description: Jenkins S2I build config to create a Jenkins image with your configuration
      baked in.
    iconClass: icon-jenkins
    tags: instant-app,jenkins
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "{{ NAME }}"
    annotations:
      description: Keeps track of changes in the application image
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: {{ BUILDER_IMAGE_STREAM_NAME }}
    annotations:
      description: Tracks the Red Hat Jenkins base image, since openshift may not ship with the tag we need. Importing the image allows normal users to run the playbook.
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: registry.access.redhat.com/openshift3/jenkins-2-rhel7:{{ BUILDER_IMAGE_STREAM_TAG_NAME }}
      importPolicy: {}
      name: {{ BUILDER_IMAGE_STREAM_TAG_NAME }}
      referencePolicy:
        type: Source
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "{{ NAME }}"
    labels:
      build: "{{ NAME }}"
      type: image
  spec:
    triggers:
    - type: GitHub
      github:
        secret: "{{ BUILD_SECRET }}"
    - type: GitLab
      gitlab:
        secret: "{{ BUILD_SECRET }}"
    - type: Generic
      generic:
        secret: "{{ BUILD_SECRET }}"
        allowEnv: true
    - type: ConfigChange
    runPolicy: Serial
    source:
      type: Git
      git:
        uri: "{{ SOURCE_REPOSITORY_URL }}"
        ref: "{{ SOURCE_REPOSITORY_REF }}"
      contextDir: "{{ SOURCE_REPOSITORY_CONTEXT_DIR }}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: "{{ BUILDER_IMAGE_STREAM_NAME }}:{{ BUILDER_IMAGE_STREAM_TAG_NAME }}"
          namespace: "{{ IMAGE_STREAM_NAMESPACE }}"
    output:
      to:
        kind: ImageStreamTag
        name: "{{ NAME }}:latest"
